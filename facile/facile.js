const newGameBtn = document.getElementById('newGameBtn');
const checkWinBtn = document.getElementById('checkWinBtn');
const numpad1 = document.getElementById('number1');
const numpad2 = document.getElementById('number2');
const numpad3 = document.getElementById('number3');
const numpad4 = document.getElementById('number4');
const gridContainer = document.getElementById('grid');
const startGameInstructions = document.getElementById('start-game');
const timer = document.getElementById('timer')


//Creating the grid dynamically
var cell = []

function createCells(numCells){
    var idNumber = 0
    for(let i = 0; i < Math.sqrt(numCells); i++){
        for(let j = 0; j < Math.sqrt(numCells); j++){
            var div = document.createElement("div");
            div.innerHTML = ''
            div.className = 'cell show'
            div.id = 'cell-' + idNumber
            boldEverything(i, j, div)
            cell.push(div)
            idNumber++
        }
    }
    return cell;
}

let createdGrid = createCells(16)

//Makes border of certain cells thicker
function boldEverything(i, j, div){
    if(i == 0 || i == 2){
        div.style.borderTop = '.3vw black solid'
    }if(j == 0 || j == 2){
        div.style.borderLeft = '.3vw black solid'
    }if(j == 3){
        div.style.borderRight = '.3vw black solid'
    }if(i == 3){
        div.style.borderBottom = '.3vw black solid'
    }
    
}

//Brings the grid to the page
function addCellstoPage(arr){
    for(let i = 0; i < arr.length; i++){
        document.getElementById('grid').appendChild(arr[i])
    }
    
}

addCellstoPage(createdGrid)

//Grid generated by https://www.sudokuweb.org/
const solution = [ 
    [1, 3, 4, 2, 
    4, 2, 1, 3,
    2, 4, 3, 1,
    3, 1, 2, 4],

    [4, 2, 3, 1,
    3, 1, 4, 2,
    1, 3, 2, 4,
    2, 4, 1, 3],

    [4, 3, 1, 2,
    2, 1, 4, 3,
    3, 4, 2, 1,
    1, 2, 3, 4],

    [2, 4, 3, 1,
    1, 3, 4, 2,
    3, 2, 1, 4,
    4, 1, 2, 3],

    [2, 4, 3, 1,
    3, 1, 2, 4,
    1, 3, 4, 2,
    4, 2, 1, 3],

    [3, 2, 4, 1,
    4, 1, 3, 2,
    2, 4, 1, 3,
    1, 3, 2, 4],

    [2, 3, 4, 1,
    4, 1, 3, 2,
    3, 2, 1, 4,
    1, 4, 2, 3],

    [2, 1, 3, 4,
    4, 3, 1, 2,
    3, 2, 4, 1,
    1, 4, 2, 3]
];

const grid = [
    [1, '', 4, '', 
    '', 2, 1, '',
    '', '', '', 1,
    '', '', '', 4],

    [4, '', 3, '',
    '', '', '', 2,
    1, 3, 2, 4,
    '', '', '', ''],

    ['', 3, 1, '',
    2, '', '', 3,
    '', 4, '', 1,
    1, '', 3, 4],

    [2, '', 3, 1,
    '', 3, 4, '',
    '', '', '', '',
    4, '', '', 3],

    ['', 4, '', 1,
    '', '', 2, '',
    '', 3, '', '',
    '', '', '', 3],

    ['', 2, 4, 1,
    4, 1, '', 2,
    '', '', '', '',
    '', '', '', ''],

    ['', 3, '', 1,
    4, '', '', '',
    '', 2, '', 4,
    1, 4, 2, 3]
]

//Event Listeners
newGameBtn.addEventListener('click', function () {startGame()});
checkWinBtn.addEventListener('click', function(){checkWin()});

numpad1.addEventListener('click', function () {addNumber(1)});
numpad2.addEventListener('click', function () {addNumber(2)});
numpad3.addEventListener('click', function () {addNumber(3)});
numpad4.addEventListener('click', function () {addNumber(4)});

document.addEventListener('keypress', addNumberKeypress);
document.addEventListener('keypress', checkWinKeypress);
document.addEventListener('keydown', clearCase);

gridContainer.addEventListener('click', (event)=>{
    if(event.target.parentNode.id != 'grid') return;
    let clickedCellNum = event.target.id.split('-').pop();
    selectGrid(clickedCellNum)
})

var newGrid;



//Starts the game
function startGame(){
    newGrid = randomGrid(grid)
    for(let i = 0; i < cell.length ; i++){ 
        cell[i].classList.add('show')
        cell[i].innerText = newGrid[i]
        if(newGrid[i] == ''){
            cell[i].classList.remove('incorrect')
            cell[i].classList.remove('correct')
            cell[i].classList.remove('show')
        }else{
            cell[i].classList.remove('incorrect')
            cell[i].classList.remove('correct')
        }
    } 
    resetTimer()
    stopTimer()
    setTimeout('startTimer()', 10)
    startGameInstructions.classList.add('hidden');
    setTimeout(slowlyHide, 200);
    if(selected.length != 0) selected[0].classList.remove('selected');
    selected = []
}

//Hides the instructions once game is started
function slowlyHide(){
    startGameInstructions.classList.add('none');
}

//Randomly chooses a grid preset
//https://www.w3schools.com/js/js_random.asp

function getRndInteger(min, max) {
    return Math.floor(Math.random() * (max - min + 1) ) + min;
}

var oldGrid = []

function randomGrid(grid){
    let newGrid = []
    let number = getRndInteger(0, (grid.length-1)) 
    if(oldGrid.length == grid.length){
        for(let i = 0; i < grid.length; i++) oldGrid.shift();
    }
    while(oldGrid.includes(number)){
        number = getRndInteger(0, (grid.length-1))
    }
    newGrid = grid[number]
    gridSolution = solution[number]
    oldGrid.push(number)
    return newGrid
}

//Cell selection function

var selected = []

function selectGrid(cellNum){
    if(!createdGrid[cellNum].classList.contains('show') && !createdGrid[cellNum].classList.contains('correct')){ 
        if(selected.length === 0){
            createdGrid[cellNum].classList.add('selected')
            selected.push(createdGrid[cellNum])
        }else if(selected[0] === createdGrid[cellNum]){ 
            selected[0].classList.remove('selected')
            selected.shift()
            selected.shift()
        }
        else{ 
            selected[0].classList.remove('selected')
            selected.shift()
            createdGrid[cellNum].classList.add('selected')
            selected.push(createdGrid[cellNum])
        }
    }
}

//Adding numbers to selected cell with buttons
function addNumber(numpadNum){
    selected[0].innerHTML = numpadNum
}

//Checks if Sudoku is completed correctly
var gridSolution

function checkWin(){
    var correctAnsw = 0
    for(let i = 0; i < cell.length; i++){  
        if(!cell[i].classList.contains('show')){
            if(cell[i].innerText == gridSolution[i]){
                cell[i].classList.remove('incorrect')
                cell[i].classList.add('correct')
                correctAnsw += 1
            }else{
                cell[i].classList.add('incorrect')
                cell[i].classList.remove('correct')
            }
        }else{
            correctAnsw += 1
        }
    }
    if(correctAnsw == cell.length){
        correctAnsw = 0
        stopTimer()
    }
    selected[0].classList.remove('selected')
    selected = []
    
}
//Checks win by pressing the "Enter" key on keyboard
function checkWinKeypress(e){
    if(e.key === "Enter"){
        checkWin()
    }
}

function slowlyHide(){
    startGameInstructions.classList.add('none');
}


//https://dev.to/gspteck/create-a-stopwatch-in-javascript-2mak

var min = 0;
var sec = 0;
var ms = 0;
var stoptime = true;

function startTimer() {
  if (stoptime == true) {
        stoptime = false;
        timerCycle();
    }
}
function stopTimer() {
  if (stoptime == false) {
    stoptime = true;
  }
}

function timerCycle() {
    if (stoptime == false) {
    ms = parseInt(ms);
    sec = parseInt(sec);
    min = parseInt(min);

    ms += 1;

    if (ms == 100) {
      sec += 1;
      ms = 0;
    }
    if (sec == 60) {
      min += 1;
      sec = 0;
      ms = 0;
    }if(min == 60){
        stopTimer()
    }

    if (ms < 10 || ms == 0) {
      ms = '0' + ms;
    }
    if (sec < 10 || sec == 0) {
      sec = '0' + sec;
    }
    if (min < 10 || min == 0) {
      min = '0' + min;
    }

    timer.innerHTML = min + ':' + sec + ':' + ms;

    setTimeout('timerCycle()', 10);
  }
}

function resetTimer() {
    timer.innerHTML = "00:00:00";
    stoptime = true;
    ms = 0;
    sec = 0;
    min = 0;
}

function addNumberKeypress(e){
    if(e.key === '1'){
        selected[0].innerHTML = 1;
    }else if(e.key === '2'){
        selected[0].innerHTML = 2;
    }else if(e.key === '3'){
        selected[0].innerHTML = 3;
    }else if(e.key === '4'){
        selected[0].innerHTML = 4;
    }
}

function clearCase(e){
    if(e.key == 'Backspace'){
        selected[0].innerHTML = '';
    }
}